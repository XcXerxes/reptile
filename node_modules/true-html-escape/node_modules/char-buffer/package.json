{
  "name": "char-buffer",
  "version": "0.6.4",
  "description": "Collect CharCodes and convert them to string.",
  "homepage": "https://github.com/schnittstabil/char-buffer",
  "keywords": [
    "Char",
    "CharCode",
    "ASCII",
    "Buffer",
    "CharBuffer",
    "NodeBuffer",
    "StringArrayBuffer",
    "StringBuffer",
    "TypedArrayBuffer",
    "TypedArray",
    "Uint16Array",
    "Array",
    "String"
  ],
  "author": {
    "name": "Michael Mayer",
    "email": "michael@schnittstabil.de"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/schnittstabil/char-buffer.git"
  },
  "bugs": {
    "url": "https://github.com/schnittstabil/char-buffer/issues"
  },
  "preferGlobal": false,
  "main": "char-buffer.js",
  "scripts": {
    "test": "node_modules/.bin/mocha --recursive"
  },
  "engines": {
    "node": ">= 0.8.0"
  },
  "dependencies": {},
  "devDependencies": {
    "xpect": "^0.3.1",
    "mocha": "^1.20.1"
  },
  "readme": "# char-buffer [![Dependencies Status Image](https://gemnasium.com/schnittstabil/char-buffer.svg)](https://gemnasium.com/schnittstabil/char-buffer) [![Build Status Image](https://travis-ci.org/schnittstabil/char-buffer.svg)](https://travis-ci.org/schnittstabil/char-buffer) [![Coverage Status](https://coveralls.io/repos/schnittstabil/char-buffer/badge.png)](https://coveralls.io/r/schnittstabil/char-buffer) [![Built with Grunt](https://cdn.gruntjs.com/builtwith.png)](http://gruntjs.com/)\n\nCollect CharCodes and convert them to a string.\n\n[![Selenium Test Status](https://saucelabs.com/browser-matrix/char-buffer.svg)](https://saucelabs.com/u/char-buffer)\n\n## Basic Usage\n\n`CharBuffer` provides multiple implementations to collect `CharCodes` via a common interface (`CharBuffer.AbstractCharBuffer`):\n\n* `CharBuffer.StringBuffer` uses a single `String`\n* `CharBuffer.StringArrayBuffer` uses an `Array` of `String`s\n* `CharBuffer.TypedArrayBuffer` uses an [Uint16Array](https://developer.mozilla.org/en-US/docs/Web/API/Uint16Array)\n* `CharBuffer.NodeBuffer` uses a [Node.js Buffer](http://nodejs.org/api/buffer.html)\n\n```javascript\nvar buffer;\n\n// Create the default CharBuffer of your platform:\nbuffer = new CharBuffer();\n\n// Same as before, but provide an estimate of the length of your string:\nbuffer = new CharBuffer(3);\n\n// Create a specific CharBuffer implementation, if supported:\nif(CharBuffer.TypedArrayBuffer.isSupported)\n  buffer = new CharBuffer.TypedArrayBuffer(3);\n}\n\n\n// Append a CharCode:\nbuffer.append(102);\n\n// Append two more CharCodes:\nbuffer.append(111).append(111);\n\n// Output 'foo':\nconsole.log(buffer.toString());\n```\n\n\n## Documentations\n\n* [API](http://schnittstabil.github.io/char-buffer/api/#!/api)\n* [Code Coverage Report](http://schnittstabil.github.io/char-buffer/coverage)\n\n\n## Node.js\n\n### Installation using Debian package\n\nSee [Ubuntu Launchpad](https://launchpad.net/~schnittstabil/+archive/ubuntu/node-char-buffer) for details.\n\n```bash\n$ sudo add-apt-repository ppa:schnittstabil/node-char-buffer\n$ sudo apt-get install node-char-buffer\n```\n### Installation using Node Package Manager (npm)\n\n1. Install [node.js](http://nodejs.org/) ([npm comes with node](https://www.npmjs.org/doc/README.html#super-easy-install)).\n\n2. Install CharBuffer from [NPM](https://www.npmjs.org/):\n    ```bash\n    npm install char-buffer\n    ```\n\n### Examples\n\n```javascript\n// Create the default CharBuffer implementation:\nvar CharBuffer = require('char-buffer'),\n    buffer     = new CharBuffer(3);\n\n// Or create a specific CharBuffer implementation by CharBuffer:\nvar CharBuffer       = require('char-buffer'),\n    TypedArrayBuffer = CharBuffer.TypedArrayBuffer,\n    buffer           = new TypedArrayBuffer(3);\n\n// Or create a specific CharBuffer implementation by package:\nvar TypedArrayBuffer = require('char-buffer/typed-array-buffer'),\n    buffer           = new TypedArrayBuffer(3);\n\n\n// Output 'foo':\nconsole.log(buffer.append(102).append(111).append(111).toString());\n```\n\n\n## Component\n\n### Installation\n\n1. Install [node.js](http://nodejs.org/) ([npm comes with node](https://www.npmjs.org/doc/README.html#super-easy-install)).\n\n2. Install [component](http://component.io/):\n    ```bash\n    npm install component --global\n    ```\n\n3. Create `component.json`:\n    ```json\n    {\n      \"name\": \"getting-started\",\n      \"dependencies\": {\n        \"schnittstabil/char-buffer\": \"*\"\n      }\n    }\n    ```\n\n4. Install dependencies:\n    ```bash\n    component install\n    ```\n\n5. Run build\n    ```bash\n    component build\n    ```\n\n### Examples\n\n```html\n<script src=\"build/build.js\"></script>\n<script>\n// Create the default CharBuffer implementation:\nvar CharBuffer = require('char-buffer'),\n    buffer = new CharBuffer(3);\n\n// Or create a specific CharBuffer implementation:\nvar CharBuffer = require('char-buffer'),\n    TypedArrayBuffer = CharBuffer.TypedArrayBuffer,\n    buffer           = new TypedArrayBuffer(3);\n\n\n// Output 'foo'\nconsole.log(buffer.append(102).append(111).append(111).toString());\n</script>\n```\n\n\n## Bower\n\n### Installation\n\n1. Install [node.js](http://nodejs.org/) ([npm comes with node](https://www.npmjs.org/doc/README.html#super-easy-install)).\n\n2. Install [Bower](http://bower.io/):\n    ```bash\n    npm install bower --global\n    ```\n\n3. Install CharBuffer from [bower.io](http://bower.io/search):\n    ```bash\n    bower install char-buffer\n    ```\n\n### Examples using SystemJS\n\nSee [systemjs/systemjs](https://github.com/systemjs/systemjs) for details.\n\nInstall [system.js](https://github.com/systemjs/systemjs):\n```bash\nbower install system.js\n```\n\n```html\n<script type=\"text/javascript\" src=\"bower_components/traceur/traceur.js\"></script>\n<script type=\"text/javascript\" src=\"bower_components/es6-module-loader/dist/es6-module-loader.js\"></script>\n<script type=\"text/javascript\" src=\"bower_components/system.js/dist/system.js\"></script>\n<script type=\"module\">\n  import CharBuffer from 'bower_components/char-buffer/char-buffer';\n  import TypedArrayBuffer from 'bower_components/char-buffer/typed-array-buffer';\n  // Create the default CharBuffer implementation:\n  var buffer = new CharBuffer(3);\n  // Or create a specific CharBuffer implementation:\n      buffer = new TypedArrayBuffer(3);\n\n  // Output 'foo'\n  console.log(buffer.append(102).append(111).append(111).toString());\n</script>\n```\n\n### Examples using Browser Globals\n\n```html\n<script src=\"bower_components/char-buffer/char-buffer.global.js\"></script>\n<script>\n// Create the default CharBuffer implementation:\nvar buffer = new CharBuffer(3);\n\n// Or create a specific CharBuffer implementation:\nvar TypedArrayBuffer = CharBuffer.TypedArrayBuffer,\n    buffer           = new TypedArrayBuffer(3);\n\n\n// Output 'foo'\nconsole.log(buffer.append(102).append(111).append(111).toString());\n</script>\n```\n\n\n### Examples using Asynchronous Module Definition\n\nSee [Asynchronous Module Definition (AMD)](https://github.com/amdjs/amdjs-api/blob/master/AMD.md) for details.\n\n```html\n<script src=\"path/to/your/amd/loader.js\"></script>\n<script src=\"bower_components/char-buffer/char-buffer.amd.js\"></script>\n<script>\n/**\n * Use the CharBuffer package:\n */\nrequire(['char-buffer'], function(CharBuffer){\n  // create the default CharBuffer implementation:\n  var buffer = new CharBuffer(3);\n\n  // Or create a specific CharBuffer implementation by CharBuffer:\n  var TypedArrayBuffer = CharBuffer.TypedArrayBuffer,\n      buffer = new TypedArrayBuffer(3);\n\n\n  // Output 'foo'\n  console.log(buffer.append(102).append(111).append(111).toString());\n});\n\n\n/**\n  * Or use a specific CharBuffer package:\n  */\nrequire(['char-buffer/typed-array-buffer'], function(TypedArrayBuffer){\n\n  var buffer = new TypedArrayBuffer(3);\n\n  // Output 'foo'\n  console.log(buffer.append(102).append(111).append(111).toString());\n});\n</script>\n```\n\n## Changelog\n\n* v0.6.2\n    * New: Debian package at [Ubuntu Launchpad](https://launchpad.net/~schnittstabil/+archive/ubuntu/node-char-buffer)\n\n* v0.6.1\n    * Fix: CharBuffer#fromString(string, [transform], [thisArg])\n\n* v0.6.0 __char-buffer becomes more array-like__\n    * New: CharBuffer#map(callback, [thisArg])\n    * New: CharBuffer#forEach(callback, [thisArg])\n    * New: CharBuffer#fromString(string, [transform])\n    * Fix: *Buffer.prototype.constructor\n\n* v0.5.0 __[component](https://github.com/component/component) support__\n\n* v0.4.0 __char-buffer becomes more string-like__\n    * New: CharBuffer#charCodeAt(offset): CharCode\n    * New: CharBuffer#charAt(offset): String\n    * New: CharBuffer#length: Number\n    * New: CharBuffer#read(offset): CharCode\n    * New: CharBuffer#write(charCode, offset)\n\n## License\n\nCopyright (c) 2014 Michael Mayer\n\nLicensed under the MIT license.\n\n",
  "readmeFilename": "README.md",
  "_id": "char-buffer@0.6.4",
  "dist": {
    "shasum": "6aa705fd1608b703463bbfe0f62cf3606166514c"
  },
  "_from": "char-buffer@~0.6.1",
  "_resolved": "https://registry.npmjs.org/char-buffer/-/char-buffer-0.6.4.tgz"
}
